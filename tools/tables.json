{
  "TableExample": "<template>\r\n  <div class=\"clients-table\">\r\n    <div class=\"table header\">\r\n      <div v-for=\"title in header\" :key=\"title\">{{ title }}</div>\r\n    </div>\r\n    <div v-if=\"$fetchState.pending\" class=\"loading\">\r\n      <spinner-loader></spinner-loader>\r\n    </div>\r\n    <div v-else-if=\"noData\">\r\n      <list-footer :no-data=\"true\" :show-image=\"true\"></list-footer>\r\n    </div>\r\n    <template v-else>\r\n      <div v-for=\"(d, index) in tableData\" :key=\"d.agentAddress\" e-else>\r\n        <div class=\"table body\">\r\n          <div>{{ `# ${getIndex(index)}` }}</div>\r\n          <div>\r\n            {{ d.agentAddress }}\r\n          </div>\r\n          <div>\r\n            {{ d.agentRakeBackRatio }}\r\n          </div>\r\n          <div>{{ d.agentInvitationCode }}</div>\r\n        </div>\r\n      </div>\r\n      <el-pagination\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :page-count=\"pageCount\"\r\n        :page-size=\"queryParameter.pageSize\"\r\n        :current-page=\"queryParameter.pageNo\"\r\n        @current-change=\"updatePage\"\r\n        @pre-click=\"preClick\"\r\n        @next-click=\"nextClick\"\r\n      >\r\n      </el-pagination>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\ntype UserAgent = {\r\n  /** @description 代理ID */\r\n  agentID?: string\r\n  /** @description 代理地址 */\r\n  agentAddress?: string\r\n  /** @description 代理返佣比例 */\r\n  agentRakeBackRatio?: string\r\n  /** @description 代理邀请码 */\r\n  agentInvitationCode?: string\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: 'AgentInvitationTable',\r\n\r\n  data() {\r\n    return {\r\n      header: [\r\n        this.$t('clientsTable.index'),\r\n        this.$t('clientsTable.address'),\r\n        this.$t('clientsTable.ratio'),\r\n        this.$t('clientsTable.invitationCode'),\r\n      ],\r\n      tableData: [] as UserAgent[],\r\n      queryParameter: {\r\n        pageNo: 1,\r\n        pageSize: 10,\r\n      },\r\n      pageCount: 0,\r\n    }\r\n  },\r\n  async fetch() {\r\n    this.tableData = []\r\n    // eslint-disable-next-line nuxt/no-timing-in-fetch-data\r\n    await new Promise((resolve) => setTimeout(resolve, 1000))\r\n    // const res = await this.$api.yapi.userAgents(this.queryParameter)\r\n    const res = {\r\n      totalPage: 10,\r\n      items: [{}],\r\n    }\r\n    this.pageCount = res.totalPage\r\n    this.tableData = res.items\r\n  },\r\n  computed: {\r\n    noData(): boolean {\r\n      return this.queryParameter.pageNo === 1 && this.tableData.length === 0\r\n    },\r\n  },\r\n  watch: {\r\n    queryParameter: {\r\n      handler: '$fetch',\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    getIndex(index: number) {\r\n      const { pageNo, pageSize } = this.queryParameter\r\n      return index + (pageNo - 1) * pageSize + 1\r\n    },\r\n    preClick() {\r\n      const { pageNo } = this.queryParameter\r\n      if (pageNo <= 1) return\r\n      Object.assign(this.queryParameter, {\r\n        pageNo: pageNo - 1,\r\n      })\r\n    },\r\n    nextClick() {\r\n      const { pageNo } = this.queryParameter\r\n      if (pageNo <= 1) return\r\n      Object.assign(this.queryParameter, {\r\n        pageNo: pageNo + 1,\r\n      })\r\n    },\r\n    updatePage(page: number) {\r\n      const { pageNo } = this.queryParameter\r\n      if (page !== pageNo)\r\n        Object.assign(this.queryParameter, {\r\n          pageNo: page,\r\n        })\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n:deep .el-pager li:not(.disabled).active {\r\n  background-color: $primary !important;\r\n}\r\n.clients-table {\r\n  width: 100%;\r\n  padding: 30px 39px;\r\n  .table {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: $lightText;\r\n    line-height: 18px;\r\n    gap: 10px;\r\n  }\r\n  .body {\r\n    margin: 12px 0;\r\n    .remark {\r\n      @include flexR;\r\n      @include flexRGap(4px);\r\n    }\r\n  }\r\n  .header {\r\n    margin-bottom: 24px;\r\n    color: $onSurface;\r\n  }\r\n  .loading {\r\n    height: 180px;\r\n    @include flexCc;\r\n  }\r\n}\r\n</style>\r\n"
}

{
  "TableExample": "<template>\n  <div class=\"clients-table\">\n    <div class=\"table header\">\n      <div v-for=\"title in header\" :key=\"title\">{{ title }}</div>\n    </div>\n    <div v-if=\"$fetchState.pending\" class=\"loading\">\n      <spinner-loader></spinner-loader>\n    </div>\n    <div v-else-if=\"noData\">\n      <list-footer :no-data=\"true\" :show-image=\"true\"></list-footer>\n    </div>\n    <template v-else>\n      <div v-for=\"(d, index) in tableData\" :key=\"d.agentAddress\" e-else>\n        <div class=\"table body\">\n          <div>{{ `# ${getIndex(index)}` }}</div>\n          <div>\n            {{ d.agentAddress }}\n          </div>\n          <div>\n            {{ d.agentRakeBackRatio }}\n          </div>\n          <div>{{ d.agentInvitationCode }}</div>\n        </div>\n      </div>\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :page-count=\"pageCount\"\n        :page-size=\"queryParameter.pageSize\"\n        :current-page=\"queryParameter.pageNo\"\n        @current-change=\"updatePage\"\n        @pre-click=\"preClick\"\n        @next-click=\"nextClick\"\n      >\n      </el-pagination>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\ntype UserAgent = {\n  /** @description 代理ID */\n  agentID?: string\n  /** @description 代理地址 */\n  agentAddress?: string\n  /** @description 代理返佣比例 */\n  agentRakeBackRatio?: string\n  /** @description 代理邀请码 */\n  agentInvitationCode?: string\n}\n\nexport default Vue.extend({\n  name: 'AgentInvitationTable',\n\n  data() {\n    return {\n      header: [\n        this.$t('clientsTable.index'),\n        this.$t('clientsTable.address'),\n        this.$t('clientsTable.ratio'),\n        this.$t('clientsTable.invitationCode'),\n      ],\n      tableData: [] as UserAgent[],\n      queryParameter: {\n        pageNo: 1,\n        pageSize: 10,\n      },\n      pageCount: 0,\n    }\n  },\n  async fetch() {\n    this.tableData = []\n    // eslint-disable-next-line nuxt/no-timing-in-fetch-data\n    await new Promise((resolve) => setTimeout(resolve, 1000))\n    // const res = await this.$api.yapi.userAgents(this.queryParameter)\n    const res = {\n      totalPage: 10,\n      items: [{}],\n    }\n    this.pageCount = res.totalPage\n    this.tableData = res.items\n  },\n  computed: {\n    noData(): boolean {\n      return this.queryParameter.pageNo === 1 && this.tableData.length === 0\n    },\n  },\n  watch: {\n    queryParameter: {\n      handler: '$fetch',\n      deep: true,\n    },\n  },\n  methods: {\n    getIndex(index: number) {\n      const { pageNo, pageSize } = this.queryParameter\n      return index + (pageNo - 1) * pageSize + 1\n    },\n    preClick() {\n      const { pageNo } = this.queryParameter\n      if (pageNo <= 1) return\n      Object.assign(this.queryParameter, {\n        pageNo: pageNo - 1,\n      })\n    },\n    nextClick() {\n      const { pageNo } = this.queryParameter\n      if (pageNo <= 1) return\n      Object.assign(this.queryParameter, {\n        pageNo: pageNo + 1,\n      })\n    },\n    updatePage(page: number) {\n      const { pageNo } = this.queryParameter\n      if (page !== pageNo)\n        Object.assign(this.queryParameter, {\n          pageNo: page,\n        })\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n:deep .el-pager li:not(.disabled).active {\n  background-color: $primary !important;\n}\n.clients-table {\n  width: 100%;\n  padding: 30px 39px;\n  .table {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    font-size: 16px;\n    font-weight: 500;\n    color: $lightText;\n    line-height: 18px;\n    gap: 10px;\n  }\n  .body {\n    margin: 12px 0;\n    .remark {\n      @include flexR;\n      @include flexRGap(4px);\n    }\n  }\n  .header {\n    margin-bottom: 24px;\n    color: $onSurface;\n  }\n  .loading {\n    height: 180px;\n    @include flexCc;\n  }\n}\n</style>\n"
}

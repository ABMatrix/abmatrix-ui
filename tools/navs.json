{
  "NavBar": "<template>\r\n  <div class=\"nav-bar\">\r\n    <nuxt-link\r\n      v-for=\"path in navList\"\r\n      :key=\"path.name\"\r\n      class=\"nav-item\"\r\n      :class=\"{\r\n        active: $helpers.equalPath($route, path.name),\r\n      }\"\r\n      :to=\"localePath(path.path)\"\r\n    >\r\n      <div class=\"text\">\r\n        <span>{{ path.display }}</span>\r\n      </div>\r\n    </nuxt-link>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'NavBar',\r\n  computed: {\r\n    pathName() {\r\n      const path = this.$route.matched[0].path\r\n      return path\r\n    },\r\n    navList() {\r\n      return [\r\n        {\r\n          name: 'index',\r\n          path: '/',\r\n          display: this.$t('layoutHeader.component'),\r\n        },\r\n        {\r\n          name: 'icons',\r\n          path: '/icons',\r\n          display: this.$t('layoutHeader.icon'),\r\n        },\r\n        {\r\n          name: 'svg2vue',\r\n          path: '/svg2vue',\r\n          display: this.$t('layoutHeader.svg2vue'),\r\n        },\r\n      ]\r\n    },\r\n  },\r\n  methods: {\r\n    goPage(name: string) {\r\n      this.$router.push(this.localePath(`/${name.toLowerCase()}`))\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.nav-bar {\r\n  width: 100%;\r\n  height: 100%;\r\n  @include flexRc;\r\n  @include phone {\r\n    width: 100%;\r\n  }\r\n  .nav-item {\r\n    color: $onSurface;\r\n    height: 100%;\r\n    padding: 0 37px;\r\n    @include flexCc;\r\n    cursor: default;\r\n    position: relative;\r\n    white-space: nowrap;\r\n\r\n    &.active {\r\n      .text::after {\r\n        transform: scaleX(1);\r\n        transform-origin: bottom center;\r\n        transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n      }\r\n      .text {\r\n        color: $primary;\r\n      }\r\n    }\r\n    &:hover {\r\n      .text {\r\n        color: $primary;\r\n      }\r\n    }\r\n    .text {\r\n      cursor: pointer;\r\n      height: 100%;\r\n      text-align: center;\r\n      position: relative;\r\n      @include flexCc;\r\n      &::after {\r\n        position: absolute;\r\n        content: '';\r\n        width: 100%;\r\n        height: 2px;\r\n        bottom: -2px;\r\n        background-color: $primary;\r\n        border-radius: 1px;\r\n        left: 0;\r\n        transform: scaleX(0);\r\n        @include phone {\r\n          top: -2px;\r\n          bottom: 0px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n",
  "NavBarDot": "<template>\r\n  <div class=\"nav-bar\">\r\n    <nuxt-link\r\n      v-for=\"path in navList\"\r\n      :key=\"path.name\"\r\n      class=\"nav-item\"\r\n      :class=\"{\r\n        active: $helpers.equalPath($route, path.name),\r\n      }\"\r\n      :to=\"localePath(path.path)\"\r\n    >\r\n      <div class=\"text\">\r\n        <span>{{ path.display }}</span>\r\n      </div>\r\n    </nuxt-link>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'NavBar',\r\n  computed: {\r\n    pathName() {\r\n      const path = this.$route.matched[0].path\r\n      return path\r\n    },\r\n    navList() {\r\n      return [\r\n        {\r\n          name: 'index',\r\n          path: '/',\r\n          display: this.$t('layoutHeader.component'),\r\n        },\r\n        {\r\n          name: 'icons',\r\n          path: '/icons',\r\n          display: this.$t('layoutHeader.icon'),\r\n        },\r\n        {\r\n          name: 'setting',\r\n          path: '/setting',\r\n          display: this.$t('layoutHeader.setting'),\r\n        },\r\n      ]\r\n    },\r\n  },\r\n  methods: {\r\n    goPage(name: string) {\r\n      this.$router.push(this.localePath(`/${name.toLowerCase()}`))\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.nav-bar {\r\n  width: 100%;\r\n  height: 100%;\r\n  @include flexRc;\r\n  @include phone {\r\n    width: 100%;\r\n  }\r\n  .nav-item {\r\n    color: $onSurface;\r\n    height: 100%;\r\n    padding: 0 37px;\r\n    @include flexCc;\r\n    cursor: default;\r\n    position: relative;\r\n    white-space: nowrap;\r\n\r\n    &.active {\r\n      .text::after {\r\n        transform: scaleZ(1);\r\n        transform-origin: center center;\r\n        transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n      }\r\n      .text {\r\n        color: $primary;\r\n      }\r\n    }\r\n    &:hover {\r\n      .text {\r\n        color: $primary;\r\n      }\r\n    }\r\n    .text {\r\n      cursor: pointer;\r\n      height: 100%;\r\n      text-align: center;\r\n      position: relative;\r\n      @include flexCc;\r\n      &::after {\r\n        position: absolute;\r\n        content: '';\r\n        width: 6px;\r\n        height: 6px;\r\n        border-radius: 50%;\r\n        bottom: 8px;\r\n        background-color: $primary;\r\n        left: calc(50% - 3px);\r\n        transform: scale(0);\r\n        @include phone {\r\n          top: -2px;\r\n          bottom: 0px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"
}

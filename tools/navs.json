{
  "NavBar": "<template>\n  <div class=\"nav-bar\">\n    <nuxt-link\n      v-for=\"path in navList\"\n      :key=\"path.name\"\n      class=\"nav-item\"\n      :class=\"{\n        active: $helpers.equalPath($route, path.name),\n      }\"\n      :to=\"localePath(path.path)\"\n    >\n      <div class=\"text\">\n        <span>{{ path.display }}</span>\n      </div>\n    </nuxt-link>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'NavBar',\n  computed: {\n    pathName() {\n      const path = this.$route.matched[0].path\n      return path\n    },\n    navList() {\n      return [\n        {\n          name: 'index',\n          path: '/',\n          display: this.$t('layoutHeader.component'),\n        },\n        {\n          name: 'icons',\n          path: '/icons',\n          display: this.$t('layoutHeader.icon'),\n        },\n        {\n          name: 'setting',\n          path: '/setting',\n          display: this.$t('layoutHeader.setting'),\n        },\n      ]\n    },\n  },\n  methods: {\n    goPage(name: string) {\n      this.$router.push(this.localePath(`/${name.toLowerCase()}`))\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.nav-bar {\n  width: 100%;\n  height: 100%;\n  @include flexRc;\n  @include phone {\n    width: 100%;\n  }\n  .nav-item {\n    color: $onSurface;\n    height: 100%;\n    padding: 0 37px;\n    @include flexCc;\n    cursor: default;\n    position: relative;\n    white-space: nowrap;\n\n    &.active {\n      .text::after {\n        transform: scaleX(1);\n        transform-origin: bottom center;\n        transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n      }\n      .text {\n        color: $primary;\n      }\n    }\n    &:hover {\n      .text {\n        color: $primary;\n      }\n    }\n    .text {\n      cursor: pointer;\n      height: 100%;\n      text-align: center;\n      position: relative;\n      @include flexCc;\n      &::after {\n        position: absolute;\n        content: '';\n        width: 100%;\n        height: 2px;\n        bottom: -2px;\n        background-color: $primary;\n        border-radius: 1px;\n        left: 0;\n        transform: scaleX(0);\n        @include phone {\n          top: -2px;\n          bottom: 0px;\n        }\n      }\n    }\n  }\n}\n</style>\n",
  "NavBarDot": "<template>\n  <div class=\"nav-bar\">\n    <nuxt-link\n      v-for=\"path in navList\"\n      :key=\"path.name\"\n      class=\"nav-item\"\n      :class=\"{\n        active: $helpers.equalPath($route, path.name),\n      }\"\n      :to=\"localePath(path.path)\"\n    >\n      <div class=\"text\">\n        <span>{{ path.display }}</span>\n      </div>\n    </nuxt-link>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'NavBar',\n  computed: {\n    pathName() {\n      const path = this.$route.matched[0].path\n      return path\n    },\n    navList() {\n      return [\n        {\n          name: 'index',\n          path: '/',\n          display: this.$t('layoutHeader.component'),\n        },\n        {\n          name: 'icons',\n          path: '/icons',\n          display: this.$t('layoutHeader.icon'),\n        },\n        {\n          name: 'setting',\n          path: '/setting',\n          display: this.$t('layoutHeader.setting'),\n        },\n      ]\n    },\n  },\n  methods: {\n    goPage(name: string) {\n      this.$router.push(this.localePath(`/${name.toLowerCase()}`))\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.nav-bar {\n  width: 100%;\n  height: 100%;\n  @include flexRc;\n  @include phone {\n    width: 100%;\n  }\n  .nav-item {\n    color: $onSurface;\n    height: 100%;\n    padding: 0 37px;\n    @include flexCc;\n    cursor: default;\n    position: relative;\n    white-space: nowrap;\n\n    &.active {\n      .text::after {\n        transform: scaleZ(1);\n        transform-origin:center center;\n        transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n      }\n      .text {\n        color: $primary;\n      }\n    }\n    &:hover {\n      .text {\n        color: $primary;\n      }\n    }\n    .text {\n      cursor: pointer;\n      height: 100%;\n      text-align: center;\n      position: relative;\n      @include flexCc;\n      &::after {\n        position: absolute;\n        content: '';\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n        bottom: 8px;\n        background-color: $primary;\n        left: calc(50% - 3px);\n        transform: scale(0);\n        @include phone {\n          top: -2px;\n          bottom: 0px;\n        }\n      }\n    }\n  }\n}\n</style>\n"
}

{
  "LangButton": "<template>\r\n  <div class=\"lang-button\">\r\n    <div\r\n      v-if=\"locale === 'en-US'\"\r\n      class=\"language\"\r\n      @click=\"changeLang(lang[1].code)\"\r\n    >\r\n      {{ lang[1].name }}\r\n    </div>\r\n    <div v-else class=\"language\" @click=\"changeLang(lang[0].code)\">\r\n      {{ lang[0].name }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'LangButton',\r\n  data() {\r\n    return {\r\n      lang: [\r\n        { code: 'en-US', name: 'English' },\r\n        { code: 'zh-TW', name: '繁体中文' },\r\n      ],\r\n    }\r\n  },\r\n  computed: {\r\n    locale: {\r\n      get() {\r\n        return this.$i18n.locale\r\n      },\r\n      set(lang: string) {\r\n        this.$i18n.setLocale(lang)\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    changeLang(code: string) {\r\n      this.$i18n.setLocale(code)\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.lang-button {\r\n  .language {\r\n    height: 24px;\r\n    text-align: center;\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n    font-weight: 400;\r\n    white-space: nowrap;\r\n    color: $lightText;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n",
  "ListFooter": "<template>\r\n  <div class=\"list-footer\" :class=\"{ compact }\">\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      <spinner-loader :size=\"spinnerSize\"></spinner-loader>\r\n    </div>\r\n    <div v-else-if=\"noData\" class=\"status\">\r\n      <!-- <img v-if=\"showImage\" src=\"~/assets/img/loading.png\" alt=\"loading\" /> -->\r\n      <div>{{ noDataTip }}</div>\r\n    </div>\r\n    <div v-else-if=\"noMore\" class=\"status\">\r\n      {{ $t('listFooter.noMoreData') }}\r\n    </div>\r\n    <div v-else-if=\"loadMore\" class=\"load-more\" @click=\"$emit('loadMore')\">\r\n      {{ $t('listFooter.loadMore') }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'ListFooter',\r\n  props: {\r\n    loading: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    noMore: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    noData: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    loadMore: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    noDataTip: {\r\n      type: String,\r\n      default() {\r\n        return this.$t('listFooter.noData')\r\n      },\r\n    },\r\n    showImage: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    compact: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    spinnerSize() {\r\n      return this.compact ? 20 : 30\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.list-footer {\r\n  width: 100%;\r\n  margin: 30px 0px;\r\n\r\n  &.compact {\r\n    margin: 5px 0px;\r\n  }\r\n  .loading {\r\n    width: 100%;\r\n    @include flexRc();\r\n  }\r\n  .status {\r\n    width: 100%;\r\n    @include flexCc();\r\n    color: $lightText;\r\n    img {\r\n      width: 145px;\r\n      height: 145px;\r\n    }\r\n  }\r\n\r\n  .load-more {\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    height: 25px;\r\n    color: $primary;\r\n    line-height: 21px;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n",
  "PlainButton": "<template>\r\n  <el-button class=\"plain-button\" @click=\"$emit('click')\">\r\n    <spinner-loader\r\n      v-if=\"loading\"\r\n      class=\"loading-icon\"\r\n      :size=\"20\"\r\n    ></spinner-loader>\r\n    <slot v-else class=\"button-text\"></slot>\r\n  </el-button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'PlainBotton',\r\n  props: {\r\n    loading: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.plain-button {\r\n  background-color: $onPrimary;\r\n  border: 1px solid $primary;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  border-radius: 6px !important;\r\n  color: $primary;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background-color: lighten($primary, 32);\r\n    border: 1px solid $primary;\r\n    color: $primary;\r\n  }\r\n}\r\n</style>\r\n",
  "PrimaryButton": "<template>\r\n  <el-button\r\n    v-throttle:[0.5]\r\n    type=\"primary\"\r\n    class=\"primary-button\"\r\n    :disabled=\"disabled\"\r\n    @click.stop=\"$emit('click')\"\r\n  >\r\n    <spinner-loader\r\n      v-if=\"loading\"\r\n      class=\"loading-icon\"\r\n      :size=\"20\"\r\n    ></spinner-loader>\r\n    <slot v-else class=\"button-text\"></slot>\r\n  </el-button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'PrimaryBotton',\r\n  props: {\r\n    loading: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.primary-button {\r\n  background-color: $primary;\r\n  border-color: $primary;\r\n  font-size: 14px;\r\n  border-radius: 6px !important;\r\n  font-weight: bold;\r\n  color: $onPrimary;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: lighten($primary, 5);\r\n    border-color: $primary;\r\n  }\r\n  margin-left: 0 !important;\r\n  :deep .loading-icon svg {\r\n    fill: $onPrimary !important;\r\n  }\r\n}\r\n</style>\r\n",
  "TextButton": "<template>\r\n  <el-button\r\n    type=\"text\"\r\n    :disabled=\"disabled\"\r\n    class=\"text-button\"\r\n    @click=\"$emit('click')\"\r\n  >\r\n    <spinner-loader\r\n      v-if=\"loading\"\r\n      class=\"loading-icon\"\r\n      :size=\"20\"\r\n    ></spinner-loader>\r\n    <slot v-else class=\"button-text\"></slot>\r\n  </el-button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'PlainBotton',\r\n  props: {\r\n    loading: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.text-button {\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  border-radius: 6px !important;\r\n  color: $primary;\r\n  padding: 0;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: $primary;\r\n  }\r\n}\r\n.is-disabled {\r\n  color: #c0c4cc !important;\r\n}\r\n</style>\r\n",
  "ThemeButton": "<template>\r\n  <div class=\"theme-button\" @click=\"changeTheme\">\r\n    <dark-mode-icon v-if=\"$colorMode.value === 'dark'\"></dark-mode-icon>\r\n    <light-mode-icon v-else></light-mode-icon>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'ThemeSwtich',\r\n  methods: {\r\n    changeTheme() {\r\n      if (this.$colorMode.value === 'light') {\r\n        this.$colorMode.preference = 'dark'\r\n      } else {\r\n        this.$colorMode.preference = 'light'\r\n      }\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.theme-button {\r\n  cursor: pointer;\r\n  @include flexCc;\r\n  svg {\r\n    fill: $onBackground;\r\n  }\r\n}\r\n</style>\r\n"
}

{
  "LangButton": "<template>\n  <div class=\"lang-button\">\n    <div\n      v-if=\"locale === 'en-US'\"\n      class=\"language\"\n      @click=\"changeLang(lang[1].code)\"\n    >\n      {{ lang[1].name }}\n    </div>\n    <div v-else class=\"language\" @click=\"changeLang(lang[0].code)\">\n      {{ lang[0].name }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'LangButton',\n  data() {\n    return {\n      lang: [\n        { code: 'en-US', name: 'English' },\n        { code: 'zh-TW', name: '繁体中文' },\n      ],\n    }\n  },\n  computed: {\n    locale: {\n      get() {\n        return this.$i18n.locale\n      },\n      set(lang: string) {\n        this.$i18n.setLocale(lang)\n      },\n    },\n  },\n  methods: {\n    changeLang(code: string) {\n      this.$i18n.setLocale(code)\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.lang-button {\n  .language {\n    height: 24px;\n    text-align: center;\n    font-size: 15px;\n    line-height: 24px;\n    font-weight: 400;\n    white-space: nowrap;\n    color: $lightText;\n    cursor: pointer;\n  }\n}\n</style>\n",
  "ListFooter": "<template>\n  <div class=\"list-footer\" :class=\"{ compact }\">\n    <div v-if=\"loading\" class=\"loading\">\n      <spinner-loader :size=\"spinnerSize\"></spinner-loader>\n    </div>\n    <div v-else-if=\"noData\" class=\"status\">\n      <!-- <img v-if=\"showImage\" src=\"~/assets/img/loading.png\" alt=\"loading\" /> -->\n      <div>{{ noDataTip }}</div>\n    </div>\n    <div v-else-if=\"noMore\" class=\"status\">\n      {{ $t('listFooter.noMoreData') }}\n    </div>\n    <div v-else-if=\"loadMore\" class=\"load-more\" @click=\"$emit('loadMore')\">\n      {{ $t('listFooter.loadMore') }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'ListFooter',\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    noMore: {\n      type: Boolean,\n      default: false,\n    },\n    noData: {\n      type: Boolean,\n      default: false,\n    },\n    loadMore: {\n      type: Boolean,\n      default: false,\n    },\n    noDataTip: {\n      type: String,\n      default() {\n        return this.$t('listFooter.noData')\n      },\n    },\n    showImage: {\n      type: Boolean,\n      default: false,\n    },\n    compact: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    spinnerSize() {\n      return this.compact ? 20 : 30\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.list-footer {\n  width: 100%;\n  margin: 30px 0px;\n\n  &.compact {\n    margin: 5px 0px;\n  }\n  .loading {\n    width: 100%;\n    @include flexRc();\n  }\n  .status {\n    width: 100%;\n    @include flexCc();\n    color: $lightText;\n    img {\n      width: 145px;\n      height: 145px;\n    }\n  }\n\n  .load-more {\n    width: 100%;\n    text-align: center;\n    font-size: 14px;\n    font-weight: bold;\n    height: 25px;\n    color: $primary;\n    line-height: 21px;\n    cursor: pointer;\n  }\n}\n</style>\n",
  "PlainButton": "<template>\n  <el-button class=\"plain-button\" @click=\"$emit('click')\">\n    <spinner-loader\n      v-if=\"loading\"\n      class=\"loading-icon\"\n      :size=\"20\"\n    ></spinner-loader>\n    <slot v-else class=\"button-text\"></slot>\n  </el-button>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'PlainBotton',\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.plain-button {\n  background-color: $onPrimary;\n  border: 1px solid $primary;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 6px !important;\n  color: $primary;\n  &:hover,\n  &:active,\n  &:focus {\n    background-color: lighten($primary, 32);\n    border: 1px solid $primary;\n    color: $primary;\n  }\n}\n</style>\n",
  "PrimaryButton": "<template>\n  <el-button\n    v-throttle:[0.5]\n    type=\"primary\"\n    class=\"primary-button\"\n    :disabled=\"disabled\"\n    @click.stop=\"$emit('click')\"\n  >\n    <spinner-loader\n      v-if=\"loading\"\n      class=\"loading-icon\"\n      :size=\"20\"\n    ></spinner-loader>\n    <slot v-else class=\"button-text\"></slot>\n  </el-button>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'PrimaryBotton',\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.primary-button {\n  background-color: $primary;\n  border-color: $primary;\n  font-size: 14px;\n  border-radius: 6px !important;\n  font-weight: bold;\n  color: $onPrimary;\n  &:hover,\n  &:active,\n  &:focus {\n    background: lighten($primary, 5);\n    border-color: $primary;\n  }\n  margin-left: 0 !important;\n  :deep .loading-icon svg {\n    fill: $onPrimary !important;\n  }\n}\n</style>\n",
  "TextButton": "<template>\n  <el-button\n    type=\"text\"\n    :disabled=\"disabled\"\n    class=\"text-button\"\n    @click=\"$emit('click')\"\n  >\n    <spinner-loader\n      v-if=\"loading\"\n      class=\"loading-icon\"\n      :size=\"20\"\n    ></spinner-loader>\n    <slot v-else class=\"button-text\"></slot>\n  </el-button>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'PlainBotton',\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.text-button {\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 6px !important;\n  color: $primary;\n  padding: 0;\n  &:hover,\n  &:active,\n  &:focus {\n    color: $primary;\n  }\n}\n.is-disabled {\n  color: #c0c4cc !important;\n}\n</style>\n",
  "ThemeButton": "<template>\n  <div class=\"theme-button\" @click=\"changeTheme\">\n    <dark-mode-icon v-if=\"$colorMode.value === 'dark'\"></dark-mode-icon>\n    <light-mode-icon v-else></light-mode-icon>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'ThemeSwtich',\n  methods: {\n    changeTheme() {\n      if (this.$colorMode.value === 'light') {\n        this.$colorMode.preference = 'dark'\n      } else {\n        this.$colorMode.preference = 'light'\n      }\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.theme-button {\n  cursor: pointer;\n  @include flexCc;\n  svg {\n    fill: $onBackground;\n  }\n}\n</style>\n"
}

{
  "SideMenu": "<template>\r\n  <div class=\"menu-wrapper\">\r\n    <div\r\n      v-for=\"(item, index) of menuData\"\r\n      :key=\"item.id\"\r\n      class=\"menu-group\"\r\n      :class=\"{ [`menu-group-${mode}`]: mode }\"\r\n    >\r\n      <div\r\n        class=\"menu-item\"\r\n        :class=\"{\r\n          selected: localeSelectedKey === item.id,\r\n          'menu-group-item': item.children && item.children.length > 0,\r\n        }\"\r\n        :style=\"childItemStyle\"\r\n        @click=\"onSelect(item)\"\r\n      >\r\n        <span>{{ item.label }}</span>\r\n        <span\r\n          v-if=\"\r\n            ['inline'].includes(mode) &&\r\n            item.children &&\r\n            item.children.length > 0\r\n          \"\r\n          class=\"expand-icon\"\r\n          :class=\"{ expand: expandKey === item.id }\"\r\n        >\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"item.children && item.children.length > 0\"\r\n        class=\"menu-children\"\r\n        :class=\"{\r\n          'menu-children-expand': mode === 'inline' && expandKey === item.id,\r\n        }\"\r\n      >\r\n        <MenusSideMenu\r\n          :menu-data=\"item.children\"\r\n          :selected-key.sync=\"localeSelectedKey\"\r\n          :level=\"parentLaval ? `${parentLaval}-${index}` : `${index}`\"\r\n          :mode=\"mode\"\r\n          @onSelect=\"onSelect\"\r\n        ></MenusSideMenu>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue, { PropOptions } from 'vue'\r\n\r\ntype Mode = 'inline' | 'side'\r\n\r\nexport type MenuWrapper = {\r\n  mode?: Mode\r\n}\r\n\r\nexport type MenuData = {\r\n  id: string\r\n  label: string\r\n  children?: MenuData[]\r\n}\r\n\r\nconst exampleData = [\r\n  {\r\n    id: 'title',\r\n    label: 'Title',\r\n    children: [\r\n      {\r\n        id: 'a',\r\n        label: 'a',\r\n      },\r\n      {\r\n        id: 'b',\r\n        label: 'b',\r\n      },\r\n      {\r\n        id: 'c',\r\n        label: 'C',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'title2',\r\n    label: 'Title2',\r\n    children: [\r\n      {\r\n        id: 'a2',\r\n        label: 'a',\r\n      },\r\n      {\r\n        id: 'b2',\r\n        label: 'b',\r\n      },\r\n      {\r\n        id: 'c2',\r\n        label: 'C',\r\n      },\r\n    ],\r\n  },\r\n  { id: 'title3', label: 'Label' },\r\n]\r\n\r\nexport default Vue.extend({\r\n  name: 'SideMenu',\r\n  props: {\r\n    mode: {\r\n      type: String,\r\n      default: 'side',\r\n    } as PropOptions<Mode>,\r\n    menuData: {\r\n      type: Array,\r\n      default() {\r\n        return exampleData\r\n      },\r\n    } as PropOptions<MenuData[]>,\r\n    selectedKey: {\r\n      type: String,\r\n      default: 'a',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      localeSelectedKey: undefined as undefined | string,\r\n      expandKey: undefined as undefined | string,\r\n    }\r\n  },\r\n  computed: {\r\n    parentLaval(): string {\r\n      return this.$attrs.level\r\n    },\r\n    childItemStyle() {\r\n      let style = {}\r\n      const levles = this.parentLaval?.split('-')\r\n\r\n      if (this.mode === 'inline' && levles) {\r\n        style = {\r\n          paddingLeft: `${15 * levles.length}px`,\r\n        }\r\n      }\r\n\r\n      return style\r\n    },\r\n  },\r\n  watch: {\r\n    selectedKey: {\r\n      immediate: true,\r\n      handler() {\r\n        this.localeSelectedKey = this.selectedKey\r\n      },\r\n    },\r\n    localeSelectedKey() {\r\n      if (this.localeSelectedKey !== this.selectedKey) {\r\n        this.$emit('update:selectedKey', this.localeSelectedKey)\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    onSelect(info: any) {\r\n      if (info.children && info.children.length > 0) {\r\n        if (this.expandKey === info.id) {\r\n          this.expandKey = undefined\r\n        } else {\r\n          this.expandKey = info.id\r\n        }\r\n      } else {\r\n        this.localeSelectedKey = info.id\r\n        this.$emit('onSelect', info)\r\n        this.$emit('update:selectedKey', info.id)\r\n      }\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@keyframes children {\r\n  from {\r\n    max-height: 0px;\r\n    opacity: 0.5;\r\n  }\r\n  to {\r\n    max-height: 3000px;\r\n    opacity: initial;\r\n  }\r\n}\r\n\r\n.menu-wrapper {\r\n  width: 100%;\r\n\r\n  .menu-group {\r\n    width: 100%;\r\n    position: relative;\r\n    .menu-item {\r\n      height: 40px;\r\n      line-height: 40px;\r\n      font-weight: 400;\r\n      cursor: pointer;\r\n      transition: 0.2s;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      flex-wrap: nowrap;\r\n      color: $onBackground;\r\n      padding: 0 10px;\r\n\r\n      &.selected {\r\n        background-color: lighten($primary, 10) !important;\r\n        color: $onPrimary;\r\n      }\r\n\r\n      .expand-icon {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        margin-right: 20px;\r\n        &::before {\r\n          content: '';\r\n          width: 10px;\r\n          height: 2px;\r\n          background-color: black;\r\n          display: block;\r\n          transform: rotateZ(45deg);\r\n          transition: all 0.3s linear;\r\n          position: absolute;\r\n          top: 0;\r\n          left: -2px;\r\n          border-radius: 2px;\r\n        }\r\n        &::after {\r\n          content: '';\r\n          width: 10px;\r\n          height: 2px;\r\n          background-color: black;\r\n          display: block;\r\n          transform: rotateZ(-45deg);\r\n          transition: all 0.3s linear;\r\n          position: absolute;\r\n          top: 0;\r\n          right: -2px;\r\n          border-radius: 2px;\r\n        }\r\n\r\n        &.expand {\r\n          &::before {\r\n            transform: rotateZ(-45deg);\r\n          }\r\n          &::after {\r\n            transform: rotateZ(45deg);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.menu-group-side {\r\n      .menu-item {\r\n        /* &:hover {\r\n          color: $primary;\r\n        } */\r\n\r\n        &.menu-group-item {\r\n          color: $onBackground;\r\n          font-weight: 500;\r\n\r\n          /* &:hover {\r\n            color: #12121275;\r\n          } */\r\n        }\r\n      }\r\n\r\n      .menu-children {\r\n        border-top: 1px solid rgba(151, 150, 150, 0.645);\r\n        padding-top: 5px;\r\n        padding-bottom: 10px;\r\n        .menu-item {\r\n          padding-left: 10px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.menu-group-inline {\r\n      .menu-children {\r\n        overflow: hidden;\r\n        height: 0px;\r\n        transition: all 0.3s linear;\r\n\r\n        &.menu-children-expand {\r\n          height: initial !important;\r\n          /* animation: children 0.5s; */\r\n        }\r\n\r\n        .menu-item {\r\n          background-color: rgb(244 242 242);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"
}

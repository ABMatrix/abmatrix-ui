{
  "SideMenu": "<template>\n  <div class=\"menu-wrapper\">\n    <div\n      v-for=\"(item, index) of menuData\"\n      :key=\"item.id\"\n      class=\"menu-group\"\n      :class=\"{ [`menu-group-${mode}`]: mode }\"\n    >\n      <div\n        class=\"menu-item\"\n        :class=\"{\n          selected: localeSelectedKey === item.id,\n          'menu-group-item': item.children && item.children.length > 0,\n        }\"\n        :style=\"childItemStyle\"\n        @click=\"onSelect(item)\"\n      >\n        <span>{{ item.label }}</span>\n        <span\n          v-if=\"\n            ['inline'].includes(mode) &&\n            item.children &&\n            item.children.length > 0\n          \"\n          class=\"expand-icon\"\n          :class=\"{ expand: expandKey === item.id }\"\n        >\n        </span>\n      </div>\n\n      <div\n        v-if=\"item.children && item.children.length > 0\"\n        class=\"menu-children\"\n        :class=\"{\n          'menu-children-expand': mode === 'inline' && expandKey === item.id,\n        }\"\n      >\n        <MenusSideMenu\n          :menu-data=\"item.children\"\n          :selected-key.sync=\"localeSelectedKey\"\n          :level=\"parentLaval ? `${parentLaval}-${index}` : `${index}`\"\n          :mode=\"mode\"\n          @onSelect=\"onSelect\"\n        ></MenusSideMenu>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue, { PropOptions } from 'vue'\n\ntype Mode = 'inline' | 'side'\n\nexport type MenuWrapper = {\n  mode?: Mode\n}\n\nexport type MenuData = {\n  id: string\n  label: string\n  children?: MenuData[]\n}\n\nconst exampleData = [\n  {\n    id: 'title',\n    label: 'Title',\n    children: [\n      {\n        id: 'a',\n        label: 'a',\n      },\n      {\n        id: 'b',\n        label: 'b',\n      },\n      {\n        id: 'c',\n        label: 'C',\n      },\n    ],\n  },\n  {\n    id: 'title2',\n    label: 'Title2',\n    children: [\n      {\n        id: 'a2',\n        label: 'a',\n      },\n      {\n        id: 'b2',\n        label: 'b',\n      },\n      {\n        id: 'c2',\n        label: 'C',\n      },\n    ],\n  },\n  { id: 'title3', label: 'Label' },\n]\n\nexport default Vue.extend({\n  name: 'SideMenu',\n  props: {\n    mode: {\n      type: String,\n      default: 'side',\n    } as PropOptions<Mode>,\n    menuData: {\n      type: Array,\n      default() {\n        return exampleData\n      },\n    } as PropOptions<MenuData[]>,\n    selectedKey: {\n      type: String,\n      default: 'a',\n    },\n  },\n  data() {\n    return {\n      localeSelectedKey: undefined as undefined | string,\n      expandKey: undefined as undefined | string,\n    }\n  },\n  computed: {\n    parentLaval(): string {\n      return this.$attrs.level\n    },\n    childItemStyle() {\n      let style = {}\n      const levles = this.parentLaval?.split('-')\n\n      if (this.mode === 'inline' && levles) {\n        style = {\n          paddingLeft: `${15 * levles.length}px`,\n        }\n      }\n\n      return style\n    },\n  },\n  watch: {\n    selectedKey: {\n      immediate: true,\n      handler() {\n        this.localeSelectedKey = this.selectedKey\n      },\n    },\n    localeSelectedKey() {\n      if (this.localeSelectedKey !== this.selectedKey) {\n        this.$emit('update:selectedKey', this.localeSelectedKey)\n      }\n    },\n  },\n  methods: {\n    onSelect(info: any) {\n      if (info.children && info.children.length > 0) {\n        if (this.expandKey === info.id) {\n          this.expandKey = undefined\n        } else {\n          this.expandKey = info.id\n        }\n      } else {\n        this.localeSelectedKey = info.id\n        this.$emit('onSelect', info)\n        this.$emit('update:selectedKey', info.id)\n      }\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@keyframes children {\n  from {\n    max-height: 0px;\n    opacity: 0.5;\n  }\n  to {\n    max-height: 3000px;\n    opacity: initial;\n  }\n}\n\n.menu-wrapper {\n  width: 100%;\n\n  .menu-group {\n    width: 100%;\n    position: relative;\n    .menu-item {\n      height: 40px;\n      line-height: 40px;\n      font-weight: 400;\n      cursor: pointer;\n      transition: 0.2s;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: nowrap;\n      color: $onBackground;\n      padding: 0 10px;\n\n      &.selected {\n        background-color: lighten($primary, 10) !important;\n        color: $onPrimary;\n      }\n\n      .expand-icon {\n        display: flex;\n        flex-wrap: nowrap;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        margin-right: 20px;\n        &::before {\n          content: '';\n          width: 10px;\n          height: 2px;\n          background-color: black;\n          display: block;\n          transform: rotateZ(45deg);\n          transition: all 0.3s linear;\n          position: absolute;\n          top: 0;\n          left: -2px;\n          border-radius: 2px;\n        }\n        &::after {\n          content: '';\n          width: 10px;\n          height: 2px;\n          background-color: black;\n          display: block;\n          transform: rotateZ(-45deg);\n          transition: all 0.3s linear;\n          position: absolute;\n          top: 0;\n          right: -2px;\n          border-radius: 2px;\n        }\n\n        &.expand {\n          &::before {\n            transform: rotateZ(-45deg);\n          }\n          &::after {\n            transform: rotateZ(45deg);\n          }\n        }\n      }\n    }\n\n    &.menu-group-side {\n      .menu-item {\n        /* &:hover {\n          color: $primary;\n        } */\n\n        &.menu-group-item {\n          color: $onBackground;\n          font-weight: 500;\n\n          /* &:hover {\n            color: #12121275;\n          } */\n        }\n      }\n\n      .menu-children {\n        border-top: 1px solid rgba(151, 150, 150, 0.645);\n        padding-top: 5px;\n        padding-bottom: 10px;\n        .menu-item {\n          padding-left: 10px;\n        }\n      }\n    }\n\n    &.menu-group-inline {\n      .menu-children {\n        overflow: hidden;\n        height: 0px;\n        transition: all 0.3s linear;\n\n        &.menu-children-expand {\n          height: initial !important;\n          /* animation: children 0.5s; */\n        }\n\n        .menu-item {\n          background-color: rgb(244 242 242);\n        }\n      }\n    }\n  }\n}\n</style>\n"
}

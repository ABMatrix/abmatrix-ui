{
  "FormBatch": "<template>\r\n  <div class=\"form-batch\">\r\n    <el-form ref=\"form\" :model=\"formModel\" :rules=\"rules\">\r\n      <div v-for=\"(item, index) in formModel.valList\" :key=\"index\" class=\"list\">\r\n        <input-form-item\r\n          class=\"input\"\r\n          :prop=\"'valList.' + index + '.name'\"\r\n          :rules=\"rules.name\"\r\n          :value.sync=\"formModel.valList[index].name\"\r\n        ></input-form-item>\r\n        <span class=\"divider\">——</span>\r\n        <input-form-item\r\n          class=\"input\"\r\n          :is-number=\"true\"\r\n          :prop=\"'valList.' + index + '.value'\"\r\n          :rules=\"rules.value\"\r\n          :value.sync=\"formModel.valList[index].value\"\r\n        ></input-form-item>\r\n        <div class=\"action\">\r\n          <div\r\n            v-if=\"formModel.valList.length > 1\"\r\n            class=\"icon\"\r\n            @click=\"memberChange(index)\"\r\n          >\r\n            －\r\n          </div>\r\n          <div\r\n            v-if=\"index === formModel.valList.length - 1\"\r\n            class=\"icon\"\r\n            @click=\"memberChange()\"\r\n          >\r\n            ＋\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </el-form>\r\n    <primary-button\r\n      class=\"button\"\r\n      :loading=\"submitting\"\r\n      @click=\"submit\"\r\n      >{{ $t('formBatch.submit') }}</primary-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\ntype itemType = {\r\n  name: string | number | undefined\r\n  value: string | number | undefined\r\n}\r\nexport default Vue.extend({\r\n  name: 'FormBatch',\r\n  data() {\r\n    return {\r\n      submitting:false,\r\n      formModel: {\r\n        valList: [\r\n          {\r\n            name: undefined,\r\n            value: undefined,\r\n          },\r\n        ] as itemType[],\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    rules() :any{\r\n      return {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: this.$t('formBatch.plzInputName'),\r\n            trigger: 'blur',\r\n          }\r\n        ],\r\n        value: [\r\n          {\r\n            required: true,\r\n            message: this.$t('formBatch.plzInputvalue'),\r\n            trigger: 'blur',\r\n          },\r\n          {\r\n            type: 'number',\r\n            min: 0,\r\n            message: this.$t('formBatch.valueLimit'),\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    memberChange(idx: number){\r\n      if (idx || idx === 0) {\r\n        this.formModel.valList.splice(idx, 1)\r\n      } else {\r\n        if (this.formModel.valList.length === 5) {\r\n          return this.$message.warning(this.$t('formBatch.valueMax',{num:5}).toString())\r\n        }\r\n        const obj = {\r\n          name: undefined,\r\n          value: undefined,\r\n        }\r\n        this.formModel.valList.push(obj)\r\n      }\r\n    },\r\n    submit(){\r\n      ;(this.$refs.form as any).validate(async (valid: boolean) => {\r\n        if (!valid) return\r\n        await this.$message.success(this.$t('formBatch.success').toString())\r\n      })\r\n    }\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Element 输入框\r\n.form-batch {\r\n  padding: 20px 0;\r\n  height: 100%;\r\n  @include flexC;\r\n  .list {\r\n    margin-top: 6px;\r\n    @include flexR;\r\n    align-items: center;\r\n    span {\r\n      white-space: nowrap;\r\n      margin: 0 20px 22px 20px;\r\n      color: $lightText;\r\n    }\r\n    .label {\r\n      width: 300px;\r\n      @include flexR;\r\n      .limit {\r\n        font-size: 12px;\r\n        margin: 0 0 0 10px;\r\n      }\r\n    }\r\n    .input {\r\n      width: 300px;\r\n    }\r\n    .blank {\r\n      width: 32px;\r\n    }\r\n    .action {\r\n      width: 100px;\r\n      @include flexR;\r\n      .icon {\r\n        cursor: pointer;\r\n        position: relative;\r\n        top: -8px;\r\n        margin: 0 8px;\r\n        width: 30px;\r\n        height: 30px;\r\n        background-color: $primary;\r\n        color: $onPrimary;\r\n        font-weight: bold;\r\n        @include flexRc;\r\n        padding: 0;\r\n        flex-shrink: 0;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n  .button {\r\n    width: 300px;\r\n    margin: 30px 0;\r\n  }\r\n}\r\n</style>\r\n"
}
